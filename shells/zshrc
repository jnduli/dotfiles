# zmodload zsh/zprof  
# If you come from bash you might have to change your $PATH.
# add .local for personal scripts , and ~/go for golang support
export PATH="$PATH:$HOME/.local/bin:$HOME/go/bin"

# Path to your oh-my-zsh installation.
export ZSH=/home/rookie/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="bira"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# kennethreitz, robbyrussell also good
# ZSH_THEME_RANDOM_CANDIDATES=( "bira" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
plugins=(git vi-mode fzf gitfast)
# plugins=()

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR=nvim

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# alias tmux="TERM=screen-256color-bce tmux"
#
alias tl="tasklite"
alias tl-review="sqlite3 -header -column ~/gdrive_rclone/tasklite/main.db \"
    SELECT p.due_date, c.total_done, p.planned, d.planned_done, m.missed_deadlines from 
    -- all tasks that had been planned
    (SELECT DATE(due_utc) AS due_date, count(*) AS planned FROM tasks_view WHERE due_utc IS NOT NULL GROUP BY DATE(due_utc)) p
    LEFT JOIN
    -- all tasks that were done in that day
    (SELECT DATE(closed_utc) AS closed_date, count(*) AS total_done FROM tasks_view WHERE closed_utc IS NOT NULL GROUP BY DATE(closed_utc)) c
    ON c.closed_date = p.due_date
    LEFT JOIN
    -- all planned tasks that got completed on this day
    (SELECT DATE(closed_utc) AS closed_date, DATE(due_utc) AS planned_due, count(*) AS planned_done FROM tasks_view WHERE closed_utc IS NOT NULL AND due_utc IS NOT NULL GROUP BY DATE(closed_utc)) d
    ON d.planned_due = p.due_date
    LEFT OUTER JOIN 
    -- all planned tasks that were done after the due date (ignoring time)
    (SELECT DATE(due_utc) as missed_date, count(*) AS missed_deadlines FROM tasks_view WHERE DATE(due_utc) < DATE(closed_utc) OR  (due_utc IS NOT NULL AND closed_utc IS NULL) GROUP BY DATE(due_utc)) m
    ON  m.missed_date = p.due_date 
    WHERE p.due_date < DATETIME('now')
    ORDER BY p.due_date DESC LIMIT 10\"
"
alias tl-leo="tl query \"closed_utc IS NULL AND DATE(due_utc) <= DATE('now') AND (ready_utc IS NULL OR DATETIME(ready_utc) <= DATETIME('now')) order by due_utc ASC, ready_utc ASC, priority DESC\""
alias tl-leo-all="tl query \"closed_utc IS NULL AND DATE(due_utc) <= DATE('now') order by due_utc ASC, priority DESC\""
alias tl-kesho="tl query \"closed_utc IS NULL AND DATE(due_utc) <= DATE('now', '+1 day') order by due_utc ASC, priority DESC\""
alias tl-unscheduled="tl query \"closed_utc IS NULL AND due_utc IS NULL order by priority DESC\""
alias tl-down="rclone copy tlite_sync:backups/work_xps/tasklite/ ~/gdrive_rclone/tasklite/ --update"
alias tl-up="rclone copy ~/gdrive_rclone/tasklite/ tlite_sync:backups/work_xps/tasklite/ --update"
alias tl-remaining="sqlite3 -header -column ~/gdrive_rclone/tasklite/main.db \" 
    SELECT
        SUM(count) AS total,
        max(CASE WHEN closed_utc IS NULL THEN count END) AS not_done,
        max(CASE WHEN closed_utc == DATE('now') THEN count END ) AS done,
        ROUND(max(CASE WHEN closed_utc == DATE('now') THEN count END ) * 1.0 / SUM(count), 2) AS percentage_done,
        -- if I wake up at 5 and sleep at 9 I have 16 hours for work, so all I need to do is get hours from 5 and get the ratio
        -- do * 24 because julianday returns no of days, so this converts it to hours
        -- use 02:00 since sqlite uses utc by default, so 5am EAT is 2am in utc
        ROUND( (julianday('now') - julianday(DATE('now')|| ' 02:00')) * 24 / 16 , 2) AS expected_done,
        ROUND( SUM(count) * (julianday('now') - julianday(DATE('now')|| ' 02:00')) * 24 / 16 , 0) AS expected_done_count
    FROM (
        SELECT DATE(closed_utc) AS closed_utc, COUNT(*) AS count from tasks_view
        WHERE DATE(due_utc)=DATE('now') OR DATE(closed_utc)=DATE('now')
            OR (DATE(due_utc)<DATE('now') AND closed_utc IS NULL)
        GROUP BY DATE(closed_utc)
        ORDER BY DATE(closed_utc)) \"
"
alias tl-plan="tl query \"closed_utc IS NULL AND DATE(due_utc) <= DATE('now') AND (tags IS NULL OR (tags NOT LIKE '%ignore%' AND tags NOT LIKE '%meeting%')) ORDER BY priority desc\""
alias tl-plan-kesho="tl query \"closed_utc IS NULL AND DATE(due_utc) <= DATE('now', '+1 day') AND (tags IS NULL OR (tags NOT LIKE '%routine%' AND tags NOT LIKE '%meeting%')) ORDER BY priority desc\""
alias habit-tasks="sqlite3 -header -column ~/gdrive_rclone/tasklite/main.db \"SELECT distinct body, recurrence_duration, TIME(due_utc) AS time FROM tasks_view WHERE recurrence_duration IS NOT NULL AND closed_utc IS NULL ORDER BY recurrence_duration DESC, time ASC;\""
alias tl-cleanup="sqlite3 -header -column ~/gdrive_rclone/tasklite/main.db \"
    DELETE FROM tasks WHERE 
        closed_utc IS NOT NULL 
        AND DATE(closed_utc) < DATE('now', '-2 month');
    SELECT changes() AS rows_dropped;
    \"
"


alias ledger-budget="ledger --file ~/docs/ledger/blackbook.ledger --period \"this month\"  --exchange Ksh --no-rounding --budget --monthly register ^expenses"
alias test-writing='f(){write-good --parse "$1" | wc -l | xargs echo "write-good"; proselint "$1" | wc -l | xargs echo "proselint";  cat "$1" | wc -w | xargs echo "words"; unset -f f;}; f'
alias vim-game="docker run -it --rm brandoncc/vim-be-good:stable"
alias feelings-wheel="feh --scale-down -g 970X720 https://feelingswheel.com/feelings-wheel.jpg"


if [ -f ~/.custom_alias ]; then
    source ~/.custom_alias
fi

# run if fortune exists and 50% probability
if [[ -x "$(command -v fortune)" ]] && (( RANDOM % 2 )); then
    fortune -s
else
    echo -e "\e[1;35m Reminder: Take a deep breath and fix posture \e[0m"
fi

# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh



lazy_load_nvm() {
    unset -f node
    export NVM_DIR="$HOME/.config/nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
}

node() {
  lazy_load_nvm
  node $@
}
# zprof
